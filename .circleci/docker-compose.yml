version: "2"

networks:
  as_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16

services:
  coord:
    build:
      context: ..
      dockerfile: .circleci/Dockerfile-coord
    networks:
      as_net:
        ipv4_address: 172.31.0.10
    ports:
      - "8432:8000"

  as1301:
    build:
      context: ..
      dockerfile: .circleci/Dockerfile-scionHost
    networks:
      as_net:
        ipv4_address: ${as1301_ip}
    env_file: /tmp/as1301.env
    privileged: true

  as1303:
    build:
      context: ..
      dockerfile: .circleci/Dockerfile-scionHost
    networks:
      as_net:
        ipv4_address: ${as1303_ip}
    env_file: /tmp/as1303.env
    privileged: true

  as1305:
    build:
      context: ..
      dockerfile: .circleci/Dockerfile-scionHost
    networks:
      as_net:
        ipv4_address: ${as1305_ip}
    env_file: /tmp/as1305.env
    privileged: true

  as1401:
    build:
      context: ..
      dockerfile: .circleci/Dockerfile-scionHost
    networks:
      as_net:
        ipv4_address: ${as1401_ip}
    env_file: /tmp/as1401.env
    privileged: true
    command: -c "until [ -e ${SC}/reloadASConfig.sh ]; do sleep 1; done; ${SC}/reloadASConfig.sh; cat;"

  as1405:
    build:
      context: ..
      dockerfile: .circleci/Dockerfile-scionHost
    depends_on:
      - as1401
    networks:
      as_net:
        ipv4_address: ${as1405_ip}
    privileged: true
    environment:
      CUSER: 2c872b10a8a348949cf181a1cb8b9a62
      CSECRET: c16f444f48034dc7bdd1b747f2428986
    tty: true
    # waits for binaries and setup script to be loaded, then a user AS to connect and run scmp echos
    entrypoint: /bin/bash
    command: -c "until [ -e ${SC}/VPNexistingAS.sh ]; do sleep 1; done; ${SC}/VPNexistingAS.sh; grep 'Registered beacons' -r /var/log/scion/; scmp echo -c 10 -local 20-ffaa:0:1405,[127.0.0.1] -remote 20-ffaa:0:1401,[127.0.0.1]; touch $${SC}/done; sleep 120; echo 'reloading AP'; ${SC}/reloadASConfig.sh; cat;"

