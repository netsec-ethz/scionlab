FROM ubuntu:bionic

ARG package_repo=packages.netsec.inf.ethz.ch

RUN echo "----------------"
RUN echo "initially:\n"
RUN ls -latrG /
RUN echo "----------------"

RUN ls /.dockerenv


# # Install base
# RUN apt-get update && apt-get install --assume-yes \
#   systemd \
#   sudo \
#   apt-transport-https \
#   jq \
#   curl \
#   moreutils

# # systemd
# # Based on: https://developers.redhat.com/blog/2014/05/05/running-systemd-within-docker-container/
# #  - converted to ubuntu, i.e. fixed some paths and removed unnecessary cleanup
# #  - keep systemd-user-sessions.service, to allow login through SSH (login disabled on startup until this is run)
# ENV container docker
# RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i = systemd-tmpfiles-setup.service ] || rm -f $i; done); \
# (cd /lib/systemd/system/multi-user.target.wants/; for i in *; do [ $i = systemd-user-sessions.service ] || rm -f $i; done); \
# rm -f /etc/systemd/system/*.wants/*; \
# rm -f /lib/systemd/system/local-fs.target.wants/*; \
# rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
# rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
# rm -f /lib/systemd/system/basic.target.wants/*;
# VOLUME [ "/sys/fs/cgroup" ]

# # deleteme
# RUN echo "----------------" >> /tmp/out
# RUN echo "then we have it:\n" >> /tmp/out
# RUN ls -latrG / >> /tmp/out
# RUN echo "----------------" >> /tmp/out

# # Install SCION
# # XXX(matzf): install testing/prod based on branch name???
# RUN bash -c "echo \"deb [trusted=yes] https://${package_repo}/debian all main\" > /etc/apt/sources.list.d/scionlab.list"
# RUN apt-get update && apt-get install --assume-yes scionlab 2>&1 >> /tmp/out
# RUN echo "----------------" >> /tmp/out
# COPY mypostinst /var/lib/dpkg/info/scionlab.postinst
# RUN echo "new postinst:\n" >> /tmp/out
# RUN cat /var/lib/dpkg/info/scionlab.postinst >> /tmp/out
# RUN echo "----------------" >> /tmp/out
# RUN echo "second attempt, dpkg-reconfigure" >> /tmp/out
# RUN dpkg-reconfigure scionlab  2>&1 >> /tmp/out
# RUN echo "----------------" >> /tmp/out

# # Add 'scionlab' user with passwordless sudo
# RUN sed '/^%sudo/s/ALL$/NOPASSWD:ALL/' /etc/sudoers -i
# RUN useradd --create-home --shell /bin/bash --groups sudo scionlab
# # Add 'user' user without sudo group to run user commands
# RUN useradd --create-home --shell /bin/bash user

# # Overwrite scionlab-config script with version from repo
# COPY scionlab/hostfiles/scionlab-config /usr/bin/

# # Add CI scripts
# COPY .circleci/scripts/* /usr/local/bin/

CMD ["/bin/systemd"]
